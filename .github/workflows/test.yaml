name: "build"
on:
  push:
    branches:
      - main
      - pip-install
permissions:
  contents: read
jobs:
  build-ubuntu:
    name: Building ubuntu-20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: make loadable
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-ubuntu
          path: dist/debug/ulid0.so
  build-ubuntu-python:
    runs-on: ubuntu-20.04
    needs: [build-ubuntu]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-ubuntu
          path: dist/debug/
      - run: cp dist/debug/ulid0.so python/sqlite_ulid/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      - run: python3 .github/workflows/rename-wheels.py python/wheelhouse
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-ubuntu-wheels
          path: python/wheelhouse/*.whl
  test-ubuntu:
    runs-on: ubuntu-20.04
    needs: [build-ubuntu, build-ubuntu-python]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-ubuntu
          path: dist/debug/
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-ubuntu-wheels
          path: dist/debug/
      - run: pip install --find-links dist/debug/ sqlite_ulid
      - run: make test-loadable
      - run: make test-python
  build-macos:
    name: Building macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: make loadable
      - run: brew install python
      - run: make python=/usr/local/opt/python@3/libexec/bin/python test
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos
          path: dist/debug/ulid0.dylib
  build-macos-python:
    runs-on: macos-latest
    needs: [build-macos]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-macos
          path: dist/debug/
      - run: cp dist/debug/ulid0.dylib python/sqlite_ulid/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      - run: python3 .github/workflows/rename-wheels.py python/wheelhouse
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos-wheels
          path: python/wheelhouse/*.whl
  test-macos:
    runs-on: macos-latest
    needs: [build-macos, build-macos-python]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-macos
          path: dist/debug/
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-macos-wheels
          path: dist/debug/
      - run: pip install --find-links dist/debug/ sqlite_ulid
      - run: make test-loadable
      - run: make test-python
  build-macos-arm:
    name: Building macos-latest with arm
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup target add aarch64-apple-darwin
      - run: make target=aarch64-apple-darwin loadable
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos-arm
          path: dist/debug/ulid0.dylib
  build-macos-arm-python:
    runs-on: macos-latest
    needs: [build-macos-arm]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-macos-arm
          path: dist/debug/
      - run: cp dist/debug/ulid0.dylib python/sqlite_ulid/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      - run: python3 .github/workflows/rename-wheels.py python/wheelhouse --is-macos-arm
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos-arm-wheels
          path: python/wheelhouse/*.whl
  build-windows:
    name: Building windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: make loadable
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-windows
          path: dist/debug/ulid0.dll
  build-windows-python:
    runs-on: windows-latest
    needs: [build-windows]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-windows
          path: dist/debug/
      - run: cp dist/debug/ulid0.dll python/sqlite_ulid/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      - run: python3 .github/workflows/rename-wheels.py python/wheelhouse
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-windows-wheels
          path: python/wheelhouse/*.whl
  test-windows:
    runs-on: windows-latest
    needs: [build-windows, build-windows-python]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-windows
          path: dist/debug/
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-windows-wheels
          path: dist/debug/
      - run: pip install --find-links dist/debug/ sqlite_ulid
      - run: make test-loadable
      - run: make test-python
  upload_test_pypi:
    needs: [test-ubuntu, test-macos, test-windows, build-macos-arm-python]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-windows-wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-ubuntu-wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-macos-wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-ulid-macos-arm-wheels
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
