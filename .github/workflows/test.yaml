name: "test build"
on:
  push:
    branches:
      - main
      - pip-install
permissions:
  contents: read
jobs:
  test-ubuntu:
    name: Testing ubuntu-20.04
    runs-on: ubuntu-20.04
    if: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: make loadable
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-ubuntu
          path: dist/debug/ulid0.so
  test-python-ubuntu:
    runs-on: ubuntu-20.04
    #needs: [test-ubuntu]
    steps:
      - uses: actions/checkout@v3
      #- name: Download workflow artifacts
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: sqlite-ulid-ubuntu
      #    path: dist/debug/
      #- run: cp dist/debug/ulid0.so python/sqlite_ulid/
      - run: wget -O python/sqlite_ulid/ulid0.so 'https://github.com/asg017/sqlite-ulid/releases/download/unstable/ulid0.so'
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      - run: mv python/wheelhouse/sqlite_ulid-0.0.1-cp311-cp311-linux_x86_64.whl python/wheelhouse/sqlite_ulid-0.0.1-py3-none-linux_x86_64.whl
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-ubuntu-wheels
          path: python/wheelhouse/*.whl
  test-macos:
    if: false
    name: Testing macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: make loadable
      #- run: make test
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos
          path: dist/debug/ulid0.dylib
  test-python-macos:
    runs-on: macos-latest
    #needs: [test-macos]
    steps:
      - uses: actions/checkout@v3
      #- name: Download workflow artifacts
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: sqlite-ulid-macos
      #    path: dist/debug/
      #- run: cp dist/debug/ulid0.dylib python/sqlite_ulid/
      - run: wget -O python/sqlite_ulid/ulid0.dylib 'https://github.com/asg017/sqlite-ulid/releases/download/unstable/ulid0.dylib'
      - uses: actions/setup-python@v3
      #- name: Install cibuildwheel
      #  run: python -m pip install cibuildwheel==2.12.0
      #- name: Build wheels
      #  run: python -m cibuildwheel --output-dir wheelhouse
      #  working-directory: python/
      #  env:
      #    CIBW_BUILD_VERBOSITY: 1
      #    CIBW_REPAIR_WHEEL_COMMAND: ""
      #    CIBW_SKIP: "arm64"
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      - run: mv python/wheelhouse/sqlite_ulid-0.0.1-cp311-cp311-macosx_12_0_universal2.whl python/wheelhouse/sqlite_ulid-0.0.1-py3-none-macosx_10_6_x86_64.whl
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos-wheels
          path: python/wheelhouse/*.whl
  test-macos-arm:
    if: false
    name: Testing macos-latest with arm
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup target add aarch64-apple-darwin
      - run: make target=aarch64-apple-darwin loadable
      #- run: make test
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-macos-arm
          path: dist/debug/ulid0.dylib
  test-windows:
    if: false
    name: Testing windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: make loadable
      #- run: make test
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-windows
          path: dist/debug/ulid0.dll
  test-python-windows:
    runs-on: windows-latest
    #needs: [test-windows]
    steps:
      - uses: actions/checkout@v3
      #- name: Download workflow artifacts
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: sqlite-ulid-windows
      #    path: dist/debug/
      #- run: cp dist/debug/ulid0.dylib python/sqlite_ulid/
      - run: curl -O python/sqlite_ulid/ulid0.dll 'https://github.com/asg017/sqlite-ulid/releases/download/unstable/ulid0.dll'
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: pip wheel . -w wheelhouse
        working-directory: python/
      #- run: mv python/wheelhouse/sqlite_ulid-0.0.1-cp311-cp311-macosx_12_0_universal2.whl python/wheelhouse/sqlite_ulid-0.0.1-py3-none-macosx_10_6_x86_64.whl
      - run: find ./python
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-ulid-windows-wheels
          path: python/wheelhouse/*.whl
